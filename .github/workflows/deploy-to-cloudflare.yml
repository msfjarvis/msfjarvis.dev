name: Deploy to Cloudflare Workers Sites

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment to publish into'
        required: true
        default: 'staging'
  push:
    branches:
      - main

jobs:
  deploy-main:
    if: "contains(github.event.head_commit.message, '[deploy]') || ${{ github.event.inputs.env == 'prod' }}"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@c952173edf28a2bd22e1a4926590c1ac39630461

      - name: Setup Latest Version of Hugo
        uses: peaceiris/actions-hugo@2e89aa66d0093e4cd14751b3028fc1a179452c2e
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build Hugo Site
        run: |
          hugo --minify --gc

      - name: Publish to Cloudflare Workers Sites
        run: |
          echo "prefix = \"${HOME}\"" > ~/.npmrc
          npm install -g @cloudflare/wrangler
          mkdir -p ~/.wrangler/config/
          echo "api_token=\"${CF_API_TOKEN}\"" > ~/.wrangler/config/default.toml
          ~/bin/wrangler publish --env production
        env:
          SECRETS_ENC_KEY: ${{ secrets.SECRETS_ENC_KEY }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}

  deploy-staging:
    if: "contains(github.event.head_commit.message, '[staging]') || ${{ github.event.inputs.env == 'staging' }}"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@c952173edf28a2bd22e1a4926590c1ac39630461

      - name: Setup Latest Version of Hugo
        uses: peaceiris/actions-hugo@2e89aa66d0093e4cd14751b3028fc1a179452c2e
        with:
          hugo-version: 'latest'
          extended: true

      - name: Build Hugo Site
        run: |
          hugo --minify --gc -D --baseUrl 'https://staging.msfjarvis.dev/'

      - name: Publish to Cloudflare Workers Sites
        run: |
          echo "prefix = \"${HOME}\"" > ~/.npmrc
          npm install -g @cloudflare/wrangler
          mkdir -p ~/.wrangler/config/
          echo "api_token=\"${CF_API_TOKEN}\"" > ~/.wrangler/config/default.toml
          ~/bin/wrangler publish
        env:
          SECRETS_ENC_KEY: ${{ secrets.SECRETS_ENC_KEY }}
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
